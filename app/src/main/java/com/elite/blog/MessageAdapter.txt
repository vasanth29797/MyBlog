package com.elite.mychat;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.List;

/**
 * Created by evk29 on 28-01-2018.
 */

public class MessageAdapter extends RecyclerView.Adapter<MessageAdapter.MessageViewHolder> {

    private List<Messages> messages_list;
    private FirebaseUser current_user;
    private String sender_name, sender_thumb_image, receiver_name, receiver_thumb_image;
    private DatabaseReference users_db_ref;
    private String current_user_id, from_user_id, uid;
    private Context context;

    public MessageAdapter(List<Messages> messages_list, final String uid) {
        this.messages_list = messages_list;
        this.uid = uid;

        current_user = FirebaseAuth.getInstance().getCurrentUser();
        current_user_id = current_user.getUid();

        users_db_ref = FirebaseDatabase.getInstance().getReference().child("Users");
        users_db_ref.keepSynced(true);

        users_db_ref.addValueEventListener(
                new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        sender_name = dataSnapshot.child(current_user_id).child("name").getValue().toString();
                        sender_thumb_image = dataSnapshot.child(current_user_id).child("thumb_image").getValue().toString();
                        receiver_name = dataSnapshot.child(uid).child("name").getValue().toString();
                        receiver_thumb_image = dataSnapshot.child(uid).child("thumb_image").getValue().toString();
                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {

                    }
                }
        );
    }

    @Override
    public MessageAdapter.MessageViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).
                inflate(R.layout.my_message_aliter, parent, false);

        return new MessageViewHolder(view);
    }

    public class MessageViewHolder extends RecyclerView.ViewHolder {
        View view;
        public TextView tv_message_aliter_name, tv_message_aliter_text, tv_message_aliter_time;
        public ImageView iv_message_aliter;
        RelativeLayout the_boss;

        public MessageViewHolder(View itemView) {
            super(itemView);
            this.view = itemView;
            the_boss = itemView.findViewById(R.id.the_boss);

            tv_message_aliter_name = itemView.findViewById(R.id.tv_message_aliter_name);
            tv_message_aliter_text = itemView.findViewById(R.id.tv_message_aliter_text);
            iv_message_aliter = itemView.findViewById(R.id.iv_message_aliter);
        }
    }

    @Override
    public void onBindViewHolder(MessageViewHolder holder, int position) {//called for each item
        context = holder.view.getContext();
        Messages message = messages_list.get(position);

        from_user_id = message.getFrom();

        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) holder.the_boss.getLayoutParams();

        if (current_user_id.equals(from_user_id)) {
            holder.tv_message_aliter_name.setText(sender_name);
            Glide.with(context).load(sender_thumb_image)
                    .thumbnail(0.5f)
                    .crossFade()
                    .bitmapTransform(new GlideCircleTransformation(context))
                    .diskCacheStrategy(DiskCacheStrategy.ALL)
                    .placeholder(R.drawable.ic_user)
                    .into(holder.iv_message_aliter);
            params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
        } else {
            holder.tv_message_aliter_name.setText(receiver_name);
            Glide.with(context).load(receiver_thumb_image)
                    .thumbnail(0.5f)
                    .crossFade()
                    .bitmapTransform(new GlideCircleTransformation(context))
                    .diskCacheStrategy(DiskCacheStrategy.ALL)
                    .placeholder(R.drawable.ic_user)
                    .into(holder.iv_message_aliter);
            params.addRule(RelativeLayout.ALIGN_PARENT_LEFT);
        }

        holder.the_boss.setLayoutParams(params);
        holder.tv_message_aliter_text.setText(message.getMessage());
    }

    @Override
    public int getItemCount() {
        return messages_list.size();
    }

    @Override
    public int getItemViewType(int position) {
        return position;
    }
}
